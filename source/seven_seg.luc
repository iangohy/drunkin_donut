module seven_seg (
    input char[4],
    output segs[8]
  ) {

  always {
    case (char) {
    /* default seven seg
      0: segs = 7b0111111;
      1: segs = 7b0000110;
      2: segs = 7b1011011;
      3: segs = 7b1001111;
      4: segs = 7b1100110;
      5: segs = 7b1101101;
      6: segs = 7b1111101;
      7: segs = 7b0000111;
      8: segs = 7b1111111;
      9: segs = 7b1100111;
      default: segs = 7b0000000;
      */
      /*
      //common anode
      //in order: a b c d e f g dp
      0: segs = 8b00000011;
      1: segs = 8b10011111;
      2: segs = 8b00100101;
      3: segs = 8b00001101;
      4: segs = 8b10011001;
      5: segs = 8b01001001;
      6: segs = 8b01000001;
      7: segs = 8b00011111;
      8: segs = 8b00000001;
      9: segs = 8b00001001;
      */
    
      //common cathode
      //in order: a b c d e f g dp
      0: segs = 8b11111100;
      1: segs = 8b01100000;
      2: segs = 8b11011010;
      3: segs = 8b11110010;
      4: segs = 8b01100110;
      5: segs = 8b10110110;
      6: segs = 8b10111110;
      7: segs = 8b11100000;
      8: segs = 8b11111110;
      9: segs = 8b11110110;
      //from here onwards will be characters
      //we need win, lose
      //I and L, O can use 0 and 1 respectively
      //S can use 5
      10: segs = 8b11101100; //n
      11: segs = 8b00111100; //one side to use for w
      12: segs = 8b01111000;
      13: segs = 8b10011110; //e 
      14: segs = 8b00011100; //L
      default: segs = 8b00000000;
    }
  }
}
