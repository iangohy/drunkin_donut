module beta (
  // input p1_button,
  // input p2_button,
  input clk,  // clock
  input rst,  // reset
  // output out
) {
  
  // sig alu_input_a[16];
  // sig alu_input_b[16];
  // sig wdsel_mux_out[16];
  
  // alu game_alu;
  
  .clk(clk){
    // not very sure about edge detectors and our circle_clock + timer inputs to FSM/control unit
    
    .rst(rst){
      // INIT FSM
      // game_CU game_controlunit;
      
      // INIT REGFILE
      // regfiles game_regfiles;
      
      // INIT TIMER AND CIRCLE CLOCK
    }
  }

  always {
    // pass button presses to FSM
    // game_controlunit.p1_button = p1_button;
    // game_controlunit.p2_button = p2_button;
    
    // setup REGFILES
    // game_regfiles.we = game_controlunit.we;
    // game_regfiles.write_address = game_controlunit.rc;
    // game_regfiles.read_address_a = game_controlunit.ra;
    // game_regfiles.read_address_b = game_controlunit.rb;
    
    // regfile rb output connect to FSM
    // game_controlunit.rb_data = game_regfiles.out_b;
    
    // pass circle_clock and timer signals to FSM here, need regfiles' speed counter output
  
    // ALU asel mux
    // case(game_controlunit.asel){
      // b00  : alu_input_a = game_regfiles.out_a;
      // b01  : alu_input_a = 16h003C; 
      // b10  : alu_input_a = 16h7FFF;
      // default : //b11 unused
          // alu_input_a = 0;
    // }
    
    // ALU bsel mux
    // case(game_controlunit.bsel){
      // b00 : alu_input_b = game_regfiles.out_b;
      // b01 : alu_input_b = 16h8000;
      // b10 : alu_input_b = 16h0001;
      // b11 : alu_input_b = 0;
      // default: //necessary to init
          // alu_input_b = 0;
    // }
    
    // ALU SIGNALS
    // game_alu.a = alu_input_a;
    // game_alu.b = alu_input_b;
    // game_alu.alufn = game_controlunit.alufn[5:0];
    // game_alu.alufn_6 = game_controlunit.alufn[6]; // MSB of alufn
    
    // WDSEL mux
    // case(game_controlunit.wdsel) {
      // b000: wdsel_mux_out = game_alu.out;
      // b001: wdsel_mux_out = 16hFFFF;
      // b010: wdsel_mux_out = 16hF000;
      // b011: wdsel_mux_out = 16hF0001;
      // b100: wdsel_mux_out = 0;
      // b101: wdsel_mux_out = 16h00FF;
      // b110: wdsel_mux_out = 16hFF00;
      // default:
        // wdsel_mux_out = 0; //b111 unused
    // }
    // game_regfiles.wd = wdsel_mux_out;
    
    // take outputs of regfile (output circle halves, countdown timer, p1 and p2 scores) and make them outputs of beta here?
  }
}
