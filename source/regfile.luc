module regfile (
    input clk,  // clock
    input rst,  // reset
    input write_address[4], // write address
    input we, // write enable
    input data[16], // data in
    
    
    input read_address_a[4], //address port a 
    input read_address_b[4], //address port b
    output out_a[16], //read port a
    output out_b[16], //read port b
    
    output p1_score_out[4][4], //7seg for player 1 score
    output p2_score_out[4][4], //7seg for player 2 score
    output countdown_time_out[4][4] //7seg for countdown timer

  ) 

{
  .clk(clk){
    .rst(rst){
      dff left_half_circle[16];
      dff right_half_circle[16];
      dff countdown_time[16];
      dff player1_score[16];
      dff player2_score[16];
      dff speed_counter[16];
      dff temp_var[16];
    }
  }

  always {
  
    //write port
    if (we){
      case(write_address){
        b0000 : left_half_circle.d = data;
        b0001 : right_half_circle.d = data;
        b0010 : countdown_time.d = data;
        b0011 : player1_score.d = data;
        b0100 : player2_score.d = data;
        b0101 : speed_counter.d = data;
        b0110 : temp_var.d = data;
      }
    }
    
      
    //read port a
    case(read_address_a){
        b0000 : out_a = left_half_circle.q;
        b0001 : out_a = right_half_circle.q;
        b0010 : out_a = countdown_time.q;
        b0011 : out_a = player1_score.q;
        b0100 : out_a = player2_score.q;
        b0101 : out_a = speed_counter.q;
        b0110 : out_a = temp_var.q;
        default : out_a = 0;
    }
    
    //read port b
    case(read_address_b){
        b0000 : out_b = left_half_circle.q;
        b0001 : out_b = right_half_circle.q;
        b0010 : out_b = countdown_time.q;
        b0011 : out_b = player1_score.q;
        b0111 : out_b = player2_score.q;
        b1000 : out_b = speed_counter.q;
        b1111 : out_b = temp_var.q;
        default : out_b = 0;
    }
    
    p1_score_out[0] = player1_score.q[3:0];
    p1_score_out[1] = player1_score.q[7:4];
    p1_score_out[2] = player1_score.q[11:8];
    p1_score_out[3] = player1_score.q[15:12];
    
    p2_score_out[0] = player2_score.q[3:0];
    p2_score_out[1] = player2_score.q[7:4];
    p2_score_out[2] = player2_score.q[11:8];
    p2_score_out[3] = player2_score.q[15:12];
    
    countdown_time_out[0] = countdown_time.q[3:0];
    countdown_time_out[1] = countdown_time.q[7:4];
    countdown_time_out[2] = countdown_time.q[11:8];
    countdown_time_out[3] = countdown_time.q[15:12];
      
  }
}