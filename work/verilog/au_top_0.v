/*
   This file was generated automatically by Alchitry Labs version 1.2.7.
   Do not edit this file directly. Instead edit the original Lucid source.
   This is a temporary file and any changes made to it will be destroyed.
*/

module au_top_0 (
    input clk,
    input rst_n,
    output reg [7:0] led,
    input usb_rx,
    output reg usb_tx,
    output reg [23:0] io_led,
    output reg [7:0] io_seg,
    output reg [3:0] io_sel,
    input [4:0] io_button,
    input [23:0] io_dip
  );
  
  
  
  reg rst;
  
  wire [16-1:0] M_controller_out;
  wire [8-1:0] M_controller_misc_states;
  reg [1-1:0] M_controller_buttonNext;
  reg [8-1:0] M_controller_inputMoreSig;
  reg [8-1:0] M_controller_inputLessSig;
  reg [1-1:0] M_controller_force_error;
  reg [1-1:0] M_controller_reset_counter;
  automanual_1 controller (
    .clk(clk),
    .rst(rst),
    .buttonNext(M_controller_buttonNext),
    .inputMoreSig(M_controller_inputMoreSig),
    .inputLessSig(M_controller_inputLessSig),
    .force_error(M_controller_force_error),
    .reset_counter(M_controller_reset_counter),
    .out(M_controller_out),
    .misc_states(M_controller_misc_states)
  );
  
  wire [1-1:0] M_reset_cond_out;
  reg [1-1:0] M_reset_cond_in;
  reset_conditioner_2 reset_cond (
    .clk(clk),
    .in(M_reset_cond_in),
    .out(M_reset_cond_out)
  );
  
  always @* begin
    M_reset_cond_in = ~rst_n;
    rst = M_reset_cond_out;
    usb_tx = usb_rx;
    led = 8'h00;
    io_led = 24'h000000;
    io_seg = 8'hff;
    io_sel = 4'hf;
    M_controller_inputLessSig = io_dip[8+7-:8];
    M_controller_inputMoreSig = io_dip[16+7-:8];
    M_controller_reset_counter = io_dip[0+1+0-:1];
    M_controller_buttonNext = io_button[0+0-:1];
    M_controller_force_error = io_dip[0+0+0-:1];
    io_led[16+7-:8] = M_controller_out[8+7-:8];
    io_led[8+7-:8] = M_controller_out[0+7-:8];
    io_led[0+7-:8] = M_controller_misc_states;
  end
endmodule
