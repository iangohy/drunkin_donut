/*
   This file was generated automatically by Alchitry Labs version 1.2.7.
   Do not edit this file directly. Instead edit the original Lucid source.
   This is a temporary file and any changes made to it will be destroyed.
*/

module beta_1_debug_4 (
    input p1_button,
    input p2_button,
    input reset_button,
    input clk,
    input rst,
    output reg [15:0] countdown_timer_val,
    output reg [15:0] p1_score,
    output reg [15:0] p2_score,
    output reg [15:0] circle_left,
    output reg [15:0] circle_right,
    output reg [137:0] debug__
  );
  
  
  
  reg [15:0] alu_input_a;
  
  reg [15:0] alu_input_b;
  
  reg [15:0] wdsel_mux_out;
  
  wire [16-1:0] M_game_alu_out;
  wire [3-1:0] M_game_alu_zvn;
  wire [55-1:0] M_game_alu_debug__;
  reg [7-1:0] M_game_alu_alufn;
  reg [16-1:0] M_game_alu_a;
  reg [16-1:0] M_game_alu_b;
  alu_2_debug_7 game_alu (
    .alufn(M_game_alu_alufn),
    .a(M_game_alu_a),
    .b(M_game_alu_b),
    .out(M_game_alu_out),
    .zvn(M_game_alu_zvn),
    .debug__(M_game_alu_debug__)
  );
  
  wire [1-1:0] M_countdown_rising_edge_out;
  reg [1-1:0] M_countdown_rising_edge_in;
  edge_detector_3 countdown_rising_edge (
    .clk(clk),
    .in(M_countdown_rising_edge_in),
    .out(M_countdown_rising_edge_out)
  );
  wire [7-1:0] M_game_controlunit_alufn;
  wire [2-1:0] M_game_controlunit_asel;
  wire [2-1:0] M_game_controlunit_bsel;
  wire [3-1:0] M_game_controlunit_wdsel;
  wire [4-1:0] M_game_controlunit_regfile_write_address;
  wire [4-1:0] M_game_controlunit_regfile_read_address_a;
  wire [4-1:0] M_game_controlunit_regfile_read_address_b;
  wire [1-1:0] M_game_controlunit_we_regfile;
  wire [6-1:0] M_game_controlunit_debug__;
  reg [1-1:0] M_game_controlunit_decrease_timer;
  reg [1-1:0] M_game_controlunit_circle_clock;
  reg [16-1:0] M_game_controlunit_rb_data;
  reg [16-1:0] M_game_controlunit_countdown_time_reg;
  reg [1-1:0] M_game_controlunit_p1_button;
  reg [1-1:0] M_game_controlunit_p2_button;
  reg [1-1:0] M_game_controlunit_reset_button;
  game_CU_3_debug_8 game_controlunit (
    .clk(clk),
    .rst(rst),
    .decrease_timer(M_game_controlunit_decrease_timer),
    .circle_clock(M_game_controlunit_circle_clock),
    .rb_data(M_game_controlunit_rb_data),
    .countdown_time_reg(M_game_controlunit_countdown_time_reg),
    .p1_button(M_game_controlunit_p1_button),
    .p2_button(M_game_controlunit_p2_button),
    .reset_button(M_game_controlunit_reset_button),
    .alufn(M_game_controlunit_alufn),
    .asel(M_game_controlunit_asel),
    .bsel(M_game_controlunit_bsel),
    .wdsel(M_game_controlunit_wdsel),
    .regfile_write_address(M_game_controlunit_regfile_write_address),
    .regfile_read_address_a(M_game_controlunit_regfile_read_address_a),
    .regfile_read_address_b(M_game_controlunit_regfile_read_address_b),
    .we_regfile(M_game_controlunit_we_regfile),
    .debug__(M_game_controlunit_debug__)
  );
  wire [16-1:0] M_game_regfiles_out_a;
  wire [16-1:0] M_game_regfiles_out_b;
  wire [16-1:0] M_game_regfiles_p1_score_out;
  wire [16-1:0] M_game_regfiles_p2_score_out;
  wire [16-1:0] M_game_regfiles_countdown_time_out;
  wire [16-1:0] M_game_regfiles_speed_out;
  wire [16-1:0] M_game_regfiles_circle_left;
  wire [16-1:0] M_game_regfiles_circle_right;
  wire [13-1:0] M_game_regfiles_debug__;
  reg [4-1:0] M_game_regfiles_write_address;
  reg [1-1:0] M_game_regfiles_we;
  reg [16-1:0] M_game_regfiles_data;
  reg [4-1:0] M_game_regfiles_read_address_a;
  reg [4-1:0] M_game_regfiles_read_address_b;
  regfile_4_debug_9 game_regfiles (
    .clk(clk),
    .rst(rst),
    .write_address(M_game_regfiles_write_address),
    .we(M_game_regfiles_we),
    .data(M_game_regfiles_data),
    .read_address_a(M_game_regfiles_read_address_a),
    .read_address_b(M_game_regfiles_read_address_b),
    .out_a(M_game_regfiles_out_a),
    .out_b(M_game_regfiles_out_b),
    .p1_score_out(M_game_regfiles_p1_score_out),
    .p2_score_out(M_game_regfiles_p2_score_out),
    .countdown_time_out(M_game_regfiles_countdown_time_out),
    .speed_out(M_game_regfiles_speed_out),
    .circle_left(M_game_regfiles_circle_left),
    .circle_right(M_game_regfiles_circle_right),
    .debug__(M_game_regfiles_debug__)
  );
  wire [1-1:0] M_countdown_timer_value;
  counter_10 countdown_timer (
    .clk(clk),
    .rst(rst),
    .value(M_countdown_timer_value)
  );
  wire [1-1:0] M_game_circle_clock_out;
  wire [8-1:0] M_game_circle_clock_debug_counter;
  reg [16-1:0] M_game_circle_clock_speed;
  circle_clock_11 game_circle_clock (
    .clk(clk),
    .rst(rst),
    .speed(M_game_circle_clock_speed),
    .out(M_game_circle_clock_out),
    .debug_counter(M_game_circle_clock_debug_counter)
  );
  
  always @* begin
    M_game_controlunit_p1_button = p1_button;
    M_game_controlunit_p2_button = p2_button;
    M_game_controlunit_reset_button = reset_button;
    M_game_regfiles_we = M_game_controlunit_we_regfile;
    M_game_regfiles_write_address = M_game_controlunit_regfile_write_address;
    M_game_regfiles_read_address_a = M_game_controlunit_regfile_read_address_a;
    M_game_regfiles_read_address_b = M_game_controlunit_regfile_read_address_b;
    M_game_controlunit_rb_data = M_game_regfiles_out_b;
    M_game_controlunit_countdown_time_reg = M_game_regfiles_countdown_time_out;
    M_countdown_rising_edge_in = M_countdown_timer_value;
    M_game_circle_clock_speed = M_game_regfiles_speed_out;
    M_game_controlunit_decrease_timer = M_countdown_rising_edge_out;
    M_game_controlunit_circle_clock = M_game_circle_clock_out;
    
    case (M_game_controlunit_asel)
      2'h0: begin
        alu_input_a = M_game_regfiles_out_a;
      end
      2'h1: begin
        alu_input_a = 16'h003c;
      end
      2'h2: begin
        alu_input_a = 16'h7fff;
      end
      default: begin
        alu_input_a = 16'h0000;
      end
    endcase
    
    case (M_game_controlunit_bsel)
      2'h0: begin
        alu_input_b = M_game_regfiles_out_b;
      end
      2'h1: begin
        alu_input_b = 16'h8000;
      end
      2'h2: begin
        alu_input_b = 16'h0001;
      end
      2'h3: begin
        alu_input_b = 16'h0000;
      end
      default: begin
        alu_input_b = 16'h0000;
      end
    endcase
    M_game_alu_a = alu_input_a;
    M_game_alu_b = alu_input_b;
    M_game_alu_alufn = M_game_controlunit_alufn;
    
    case (M_game_controlunit_wdsel)
      3'h0: begin
        wdsel_mux_out = M_game_alu_out;
      end
      3'h1: begin
        wdsel_mux_out = 16'hffff;
      end
      3'h2: begin
        wdsel_mux_out = 16'hf000;
      end
      3'h3: begin
        wdsel_mux_out = 16'hf001;
      end
      3'h4: begin
        wdsel_mux_out = 16'h0000;
      end
      3'h5: begin
        wdsel_mux_out = 16'h00ff;
      end
      3'h6: begin
        wdsel_mux_out = 16'hff00;
      end
      default: begin
        wdsel_mux_out = 1'h0;
      end
    endcase
    M_game_regfiles_data = wdsel_mux_out;
    p1_score = M_game_regfiles_p1_score_out;
    p2_score = M_game_regfiles_p2_score_out;
    countdown_timer_val = M_game_regfiles_countdown_time_out;
    circle_left = M_game_regfiles_circle_left;
    circle_right = M_game_regfiles_circle_right;
  end
  
  always @* begin
    debug__ = {wdsel_mux_out, M_game_alu_out, M_game_regfiles_out_a, M_game_regfiles_out_b, M_game_alu_debug__, M_game_controlunit_debug__, M_game_regfiles_debug__};
  end
endmodule
